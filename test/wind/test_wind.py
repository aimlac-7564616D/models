from src.wind import get_wind_prediction

import numpy as np


def test_get_wind_prediction(timeseries):
    expected_wind_speed = np.array(
        [
            9.051951772929717,
            9.559817053919174,
            11.382157179822517,
            11.890022460811974,
            12.188766743746948,
            12.129017887159952,
            13.144748449138865,
            12.48751102668192,
            12.696632024736402,
            13.712362586715315,
            15.952944708727621,
            16.849177557532542,
            17.954531404391947,
            20.165239098110757,
            20.314611239578245,
            21.27059294497016,
            21.688834941079126,
            18.76114096831638,
            16.162065706782105,
            15.086586288216196,
            16.10231685019511,
            16.819303129239046,
            16.401061133130085,
            14.847590861868216,
            13.981232441356791,
        ]
    )
    expected_wind_power = np.array(
        [
            271.45738404288284,
            291.1990119042773,
            337.09640893559697,
            345.18768818004787,
            349.420052287742,
            348.6539708157931,
            360.8984693500503,
            353.5001502550117,
            356.1989478745196,
            364.2118029414701,
            358.97326742612927,
            351.8648655189568,
            343.0622247508258,
            324.0844634194308,
            322.8021822483906,
            314.5955827537333,
            311.00519547482065,
            336.13790642720875,
            357.3146403144557,
            365.0605403226235,
            357.78853377493385,
            352.10181224919586,
            355.419066472543,
            365.9316439230674,
            365.4692430057775,
        ]
    )

    result = get_wind_prediction(timeseries)
    assert all(np.isclose(result.WindSpeed, expected_wind_speed))
    assert all(np.isclose(result.WindPower, expected_wind_power))
